# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthCheckRecoveryCodeInput {
  code: String!
  email: String!
}

type AuthSignIn {
  accessToken: String!
  refreshToken: String!
  userId: String!
}

input AuthSignInInput {
  email: String!
  password: String!
}

input AuthSignUpInput {
  email: String!
  fullName: String!
  nickname: String!
  password: String!
}

type Coordinates {
  latitude: Float!
  longitude: Float!
}

input CoordinatesCreateInput {
  latitude: Float!
  longitude: Float!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Mutation {
  generateRecoveryCode(email: String!): Boolean!
  partyCreate(data: PartyCreateInput!): Party!
  signIn(data: AuthSignInInput!): AuthSignIn!
  signInFromRefreshToken: AuthSignIn!
  signUp(data: AuthSignUpInput!): AuthSignIn!
  userChangeAttendingState(data: UserChangeAttendingStateInput!): Boolean!
  userChangeFollowingState(data: UserChangeFollowingStateInput!): Boolean!
  userSendPartyInvite(data: UserSendPartyInviteInput!): Boolean!
}

type Notification {
  _id: String!
  createdAt: Date!
  from: User!
  party: Party
  type: NotificationType!
  updatedAt: Date!
  user: User!
}

enum NotificationType {
  FOLLOW
  INVITE
}

type Party {
  _id: String!
  address: String!
  allowInivites: Boolean!
  attenders: [User!]!
  availability: PartyAvailability!
  coordinates: Coordinates!
  createdAt: Date!
  date: Date!
  description: String!
  invited: [User!]!
  minAge: String
  name: String!
  openBar: Boolean!
  organizer: User!
  updatedAt: Date!
}

enum PartyAvailability {
  FOLLOWERS
  FOLLOWING
  PRIVATE
  PUBLIC
}

input PartyCreateInput {
  address: String!
  availability: PartyAvailability!
  coordinate: CoordinatesCreateInput!
  date: Date!
  description: String!
  name: String!
  openBar: Boolean!
}

type Query {
  checkRecoveryCode(data: AuthCheckRecoveryCodeInput!): Boolean!
  partyGetById(id: String!): Party!
  partySearch(q: String): [Party!]!
  userGetById(id: String!): User!
  userSearch(q: String!): [User!]!
}

type Subscription {
  notifications(userId: String!): Notification!
}

type User {
  _id: String!
  attendedParties: [Party!]!
  bio: String
  createdAt: Date!
  email: String!
  followers: [User!]!
  following: [User!]!
  fullName: String!
  invites: [Party!]!
  nickname: String!
  notifications: [Notification!]!
  organizedParties: [Party!]!
  password: String
  recoveryCode: String
  refreshToken: String
  updatedAt: Date!
}

input UserChangeAttendingStateInput {
  partyId: String!
  state: Boolean!
}

input UserChangeFollowingStateInput {
  followingId: String!
  state: Boolean!
}

input UserSendPartyInviteInput {
  invitedId: String!
  partyId: String!
}